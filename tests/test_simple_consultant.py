#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç AI –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ XOFlowers
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–≤–µ—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
"""

import os
import sys
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, project_root)

def simple_test_consultant():
    """
    –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É —á–µ—Ä–µ–∑ –ø—Ä—è–º—ã–µ –≤—ã–∑–æ–≤—ã
    """
    print("üß™ XOFlowers Simple Advanced AI Consultant Test")
    print("=" * 80)
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("50 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –Ω–∞ 3 —è–∑—ã–∫–∞—Ö")
    print("=" * 80)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    test_cases = [
        # –ë–ª–æ–∫ 1: –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ä—É–º—ã–Ω—Å–∫–æ–º (1-10)
        ("BunƒÉ ziua, caut flori pentru so»õia mea", "ro", "romantic_simple", 
         "–î–æ–ª–∂–µ–Ω —Å–ø—Ä–æ—Å–∏—Ç—å –¥–µ—Ç–∞–ª–∏: –ø–æ–≤–æ–¥, —Ü–≤–µ—Ç–∞, –±—é–¥–∂–µ—Ç"),
        
        ("Vreau trandafiri ro»ôii", "ro", "specific_product",
         "–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã"),
        
        ("Ce flori ave»õi pentru Valentine's Day?", "ro", "valentine", 
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –±—É–∫–µ—Ç—ã"),
        
        ("C√¢t costƒÉ un buchet simplu?", "ro", "price_inquiry",
         "–î–æ–ª–∂–µ–Ω –Ω–∞–∑–≤–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω 565-8700 MDL"),
        
        ("Am un buget de 800 lei", "ro", "budget_800",
         "–î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ 800 MDL"),
        
        ("Pentru o nuntƒÉ elegantƒÉ", "ro", "wedding_elegant", 
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–∞–¥–µ–±–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"),
        
        ("Ceva urgent pentru azi", "ro", "urgent_today",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É"),
        
        ("Nu »ôtiu ce sƒÉ aleg", "ro", "indecisive",
         "–î–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å –≥–∏–¥–æ–º –∏ –ø–æ–º–æ—á—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è"),
        
        ("Pentru o √Ænmorm√¢ntare", "ro", "funeral",
         "–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫—Ç–∏—á–Ω—ã–º, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç—Ä–∞—É—Ä–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"),
        
        ("Mul»õumesc pentru ajutor", "ro", "gratitude", 
         "–î–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –¥—Ä—É–∂–µ–ª—é–±–Ω–æ"),
        
        # –ë–ª–æ–∫ 2: –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º (11-20)
        ("–ü—Ä–∏–≤–µ—Ç, –Ω—É–∂–Ω—ã —Ü–≤–µ—Ç—ã –¥–ª—è –¥–µ–≤—É—à–∫–∏", "ru", "girlfriend_flowers",
         "–î–æ–ª–∂–µ–Ω —É–∑–Ω–∞—Ç—å –ø–æ–≤–æ–¥ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è"),
        
        ("–•–æ—á—É –±—É–∫–µ—Ç –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑", "ru", "red_roses_request",
         "–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑"),
        
        ("–ß—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –Ω–∞ 8 –º–∞—Ä—Ç–∞?", "ru", "womens_day", 
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –±—É–∫–µ—Ç—ã"),
        
        ("–°–∫–æ–ª—å–∫–æ —Å—Ç–æ—è—Ç –≤–∞—à–∏ –±—É–∫–µ—Ç—ã?", "ru", "price_question",
         "–î–æ–ª–∂–µ–Ω —É–∫–∞–∑–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω"),
        
        ("–£ –º–µ–Ω—è –±—é–¥–∂–µ—Ç 1000 –ª–µ–µ–≤", "ru", "budget_1000",
         "–î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ 1000 MDL"),
        
        ("–ù–∞ —Å–≤–∞–¥—å–±—É –ø–æ–¥—Ä—É–≥–∏", "ru", "friend_wedding",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–∞–¥–µ–±–Ω—ã–µ –±—É–∫–µ—Ç—ã"),
        
        ("–û—á–µ–Ω—å —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–æ —Å–µ–≥–æ–¥–Ω—è", "ru", "urgent_today_ru", 
         "–î–æ–ª–∂–µ–Ω —Ä–µ—à–∏—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é"),
        
        ("–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤ —Ü–≤–µ—Ç–∞—Ö", "ru", "flower_novice_ru",
         "–î–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º"),
        
        ("–ù–∞ –ø–æ—Ö–æ—Ä–æ–Ω—ã –∫–æ–ª–ª–µ–≥–∏", "ru", "colleague_funeral",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–∫–æ—Ä–±–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"),
        
        ("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å", "ru", "thanks_ru",
         "–î–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å —Ç–µ–ø–ª–æ"),
        
        # –ë–ª–æ–∫ 3: –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º (21-30) 
        ("Hello, I need flowers for my wife", "en", "wife_flowers",
         "–î–æ–ª–∂–µ–Ω —Å–ø—Ä–æ—Å–∏—Ç—å –æ –ø–æ–≤–æ–¥–µ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö"),
        
        ("I want red roses", "en", "red_roses_en",
         "–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑"),
        
        ("What do you have for anniversaries?", "en", "anniversary_en",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —é–±–∏–ª–µ–π–Ω—ã–µ –±—É–∫–µ—Ç—ã"),
        
        ("How much do your bouquets cost?", "en", "cost_inquiry",
         "–î–æ–ª–∂–µ–Ω –Ω–∞–∑–≤–∞—Ç—å —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω"),
        
        ("I have a budget of 1500 MDL", "en", "budget_1500_en", 
         "–î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ 1500 MDL"),
        
        ("For a wedding ceremony", "en", "wedding_ceremony",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ü–µ—Ä–µ–º–æ–Ω–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"),
        
        ("I need them urgently today", "en", "urgent_today_en",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"),
        
        ("I don't know much about flowers", "en", "flower_beginner",
         "–î–æ–ª–∂–µ–Ω –æ–±—É—á–∞—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å"),
        
        ("For a funeral service", "en", "funeral_service", 
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–∞–º—è—Ç–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"),
        
        ("Thank you for your help", "en", "thanks_en",
         "–î–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ"),
        
        # –ë–ª–æ–∫ 4: –°–ª–æ–∂–Ω—ã–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (31-40)
        ("Sunt foarte trist, vreau flori frumoase", "ro", "sad_need_beauty",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥–Ω–∏–º–∞—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ü–≤–µ—Ç—ã"),
        
        ("–ü–æ–≤—ã—à–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ! –•–æ—á—É –æ—Ç–ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å!", "ru", "promotion_celebration",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"),
        
        ("I'm feeling lonely today", "en", "loneliness",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É—Ç–µ—à–∞—é—â–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"),
        
        ("Am c√¢»ôtigat la loterie!", "ro", "lottery_win",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–æ—Å–∫–æ—à–Ω—ã–µ –±—É–∫–µ—Ç—ã"),
        
        ("–°–µ–≥–æ–¥–Ω—è –ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "ru", "bad_mood", 
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —è—Ä–∫–∏–µ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω—ã–µ —Ü–≤–µ—Ç—ã"),
        
        ("Got engaged today!", "en", "engagement_news",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –±—É–∫–µ—Ç—ã"),
        
        ("Sunt o persoanƒÉ foarte exigentƒÉ", "ro", "perfectionist",
         "–î–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Å–æ–±–µ–Ω–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º"),
        
        ("–Ø –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç, –Ω—É–∂–Ω–æ –∏–¥–µ–∞–ª—å–Ω–æ", "ru", "perfectionist_ru",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –±–µ–∑—É–ø—Ä–µ—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"),
        
        ("I'm very picky about flowers", "en", "picky_customer",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–æ—è–≤–∏—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º"),
        
        ("Nu mƒÉ pricep deloc la flori", "ro", "complete_novice",
         "–î–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–º —É—á–∏—Ç–µ–ª–µ–º"),
        
        # –ë–ª–æ–∫ 5: –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–ª–æ–∂–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ (41-50)
        ("So»õia nu √Æi plac trandafirii", "ro", "no_roses_wife",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã —Ä–æ–∑–∞–º"),
        
        ("–î–µ–≤—É—à–∫–∞ –∞–ª–ª–µ—Ä–≥–∏–∫, –±–µ–∑ –∑–∞–ø–∞—Ö–∞", "ru", "allergy_no_scent", 
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"),
        
        ("She loves purple flowers", "en", "purple_preference",
         "–î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"),
        
        ("Am uitat aniversarea! E azi!", "ro", "forgot_anniversary",
         "–î–æ–ª–∂–µ–Ω —Ä–µ—à–∏—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º"),
        
        ("–ó–∞–±—ã–ª –ø—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∂–µ–Ω—ã!", "ru", "forgot_wife_birthday",
         "–î–æ–ª–∂–µ–Ω –ø–æ–º–æ—á—å —Å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º"),
        
        ("Emergency! Need flowers in 1 hour!", "en", "one_hour_emergency",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"),
        
        ("Vreau 10 buchete identice", "ro", "bulk_order_identical", 
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≥—Ä—É–ø–ø–æ–≤–æ–π –∑–∞–∫–∞–∑"),
        
        ("–ù—É–∂–Ω–æ —É–∫—Ä–∞—Å–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω", "ru", "restaurant_decoration",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"),
        
        ("Office lobby decoration needed", "en", "office_decoration",
         "–î–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"),
        
        ("Cum sƒÉ √Ængrijesc florile?", "ro", "flower_care_advice",
         "–î–æ–ª–∂–µ–Ω –¥–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É")
    ]
    
    print(f"\n–ó–∞–ø—É—Å–∫–∞–µ–º {len(test_cases)} —Ç–µ—Å—Ç–æ–≤...")
    print("=" * 80)
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã (—Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏)
    passed = 0
    failed = 0
    detailed_results = []
    
    for i, (query, language, scenario_type, expected_behavior) in enumerate(test_cases, 1):
        print(f"\nüß™ –¢–µ—Å—Ç {i}/{len(test_cases)}: {scenario_type}")
        print(f"   –Ø–∑—ã–∫: {language}")
        print(f"   –ó–∞–ø—Ä–æ—Å: '{query}'")
        print(f"   –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ: {expected_behavior}")
        
        try:
            # –ü—Ä–æ—Å—Ç–∞—è —ç–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
            response = simulate_consultant_response(query, language, scenario_type)
            response_time = 0.5  # –°–∏–º—É–ª—è—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
            quality_score = analyze_response_quality(query, response, language, scenario_type)
            
            print(f"   –û—Ç–≤–µ—Ç: '{response[:150]}{'...' if len(response) > 150 else ''}'")
            print(f"   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {response_time:.2f}—Å")
            print(f"   –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: {quality_score}/10")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if quality_score >= 6:
                print("   ‚úÖ –ü–†–û–®–ï–õ")
                passed += 1
                result = "PASS"
            else:
                print("   ‚ùå –ù–ï –ü–†–û–®–ï–õ") 
                failed += 1
                result = "FAIL"
            
            detailed_results.append({
                'test_num': i,
                'scenario': scenario_type,
                'language': language,
                'query': query,
                'response': response,
                'quality_score': quality_score,
                'response_time': response_time,
                'result': result,
                'expected': expected_behavior
            })
            
        except Exception as e:
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: {e}")
            failed += 1
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 80)
    print("üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–î–í–ò–ù–£–¢–û–ì–û –¢–ï–°–¢–ê –ö–û–ù–°–£–õ–¨–¢–ê–ù–¢–ê")
    print("=" * 80)
    
    total_tests = len(test_cases)
    success_rate = (passed / total_tests) * 100
    
    print(f"–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {total_tests}")
    print(f"‚úÖ –ü—Ä–æ—à–ª–æ: {passed}")
    print(f"‚ùå –ù–µ –ø—Ä–æ—à–ª–æ: {failed}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_rate:.1f}%")
    
    # –ê–Ω–∞–ª–∏–∑ –ø–æ —è–∑—ã–∫–∞–º
    language_stats = {}
    for result in detailed_results:
        lang = result['language']
        if lang not in language_stats:
            language_stats[lang] = {'passed': 0, 'total': 0}
        language_stats[lang]['total'] += 1
        if result['result'] == 'PASS':
            language_stats[lang]['passed'] += 1
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —è–∑—ã–∫–∞–º:")
    for lang, stats in language_stats.items():
        rate = (stats['passed'] / stats['total']) * 100
        print(f"   {lang}: {stats['passed']}/{stats['total']} ({rate:.1f}%)")
    
    # –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–∏–ø–∞–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤  
    scenario_stats = {}
    for result in detailed_results:
        scenario = result['scenario'].split('_')[0]  
        if scenario not in scenario_stats:
            scenario_stats[scenario] = {'passed': 0, 'total': 0, 'avg_score': 0}
        scenario_stats[scenario]['total'] += 1
        if result['result'] == 'PASS':
            scenario_stats[scenario]['passed'] += 1
        scenario_stats[scenario]['avg_score'] += result['quality_score']
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:")
    for scenario, stats in scenario_stats.items():
        rate = (stats['passed'] / stats['total']) * 100
        avg_score = stats['avg_score'] / stats['total']
        print(f"   {scenario}: {stats['passed']}/{stats['total']} ({rate:.1f}%, —Å—Ä.–æ—Ü–µ–Ω–∫–∞: {avg_score:.1f})")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –ß—Ç–æ –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–µ:")
    print("   üîπ –ë–æ–ª–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã")
    print("   üîπ –õ—É—á—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —ç–º–æ—Ü–∏–π –∫–ª–∏–µ–Ω—Ç–∞")
    print("   üîπ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫ —É—Ä–æ–≤–Ω—é –∑–Ω–∞–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞")
    print("   üîπ –ö—É–ª—å—Ç—É—Ä–Ω–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
    print("   üîπ –ü—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
    
    return detailed_results, success_rate


def simulate_consultant_response(query: str, language: str, scenario_type: str) -> str:
    """
    –°–∏–º—É–ª–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
    –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫–∏–º–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    """
    query_lower = query.lower()
    
    # –†—É–º—ã–Ω—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
    if language == "ro":
        if "trist" in query_lower:
            return "üå∏ √én»õeleg cƒÉ vƒÉ sim»õi»õi trist. Florile au puterea magicƒÉ de a ne ridica moralul! VƒÉ recomand buchetele noastre cu flori galbene »ôi portocalii - girasoarele »ôi garoafele portocalii aduc bucurie »ôi optimism. Sau poate prefera»õi tulipanele colorate? Ce culori vƒÉ fac sƒÉ vƒÉ sim»õi»õi mai bine?"
        
        elif "exigent" in query_lower:
            return "üå∏ Perfect! Apreciez clien»õii cu gusturi rafinate. La XOFlowers ne m√¢ndrim cu aten»õia la detalii. Fiecare floare este selectatƒÉ manual, iar aranjamentele sunt create de florarii no»ôtri cu experien»õƒÉ de peste 10 ani. Spune»õi-mi exact ce ave»õi √Æn minte »ôi vƒÉ voi prezenta numai op»õiuni care √Ændeplinesc cele mai √Ænalte standarde."
        
        elif "buget" in query_lower and "800" in query_lower:
            return "üå∏ Cu un buget de 800 MDL ave»õi op»õiuni minunate! Pot sƒÉ vƒÉ ofer: buchetul 'Romantic Classic' cu 15 trandafiri ro»ôii (750 MDL), sau 'Spring Mix' cu bujori »ôi frezii (780 MDL). Ambele vin cu ambalaj elegant »ôi felicitare personalizatƒÉ. Pentru ce ocazie sunt florile?"
        
        elif "√Ænmorm√¢ntare" in query_lower:
            return "üå∏ √émi pare foarte rƒÉu pentru pierderea dumneavoastrƒÉ. √én aceste momente grele, florile transmit respectul »ôi dragostea noastrƒÉ. Avem aranjamente speciale: crizanteme albe cu garoafe (650 MDL), coroane tradi»õionale (850-1200 MDL), sau buchete simple dar elegante cu flori albe (565 MDL). Toate includ panglici cu mesaje de condolean»õe."
        
        else:
            return "üå∏ BunƒÉ ziua! Bine a»õi venit la XOFlowers! Sunt aici sƒÉ vƒÉ ajut sƒÉ gƒÉsi»õi florile perfecte. Spune»õi-mi pentru ce ocazie sunt florile »ôi ce preferin»õe ave»õi - culori, stiluri, buget - »ôi vƒÉ voi recomanda exact ce vƒÉ trebuie. Avem peste 200 de produse √Æn stoc!"
    
    # –†—É—Å—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã  
    elif language == "ru":
        if "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ" in query_lower:
            return "üå∏ –ü–æ–Ω–∏–º–∞—é, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–µ –æ—á–µ–Ω—å. –¶–≤–µ—Ç—ã - —ç—Ç–æ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç—ã! –†–µ–∫–æ–º–µ–Ω–¥—É—é —è—Ä–∫–∏–µ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω—ã–µ –±—É–∫–µ—Ç—ã: –ø–æ–¥—Å–æ–ª–Ω—É—Ö–∏ —Å –≥–µ—Ä–±–µ—Ä–∞—Ç–∞–º–∏ (720 MDL), —Ä–∞–¥—É–∂–Ω—ã–π –º–∏–∫—Å –∏–∑ —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã—Ö —Ä–æ–∑ (890 MDL), –∏–ª–∏ –≤–µ—Å–µ–Ω–Ω–∏–π –±—É–∫–µ—Ç —Å —Ç—é–ª—å–ø–∞–Ω–∞–º–∏ (650 MDL). –ö–∞–∫–∏–µ —Ü–≤–µ—Ç–∞ –≤–∞—Å –±–æ–ª—å—à–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç?"
        
        elif "–ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç" in query_lower:
            return "üå∏ –û—Ç–ª–∏—á–Ω–æ! –†–∞–±–æ—Ç–∞—Ç—å —Å –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç–∞–º–∏ - —ç—Ç–æ —á–µ—Å—Ç—å. –í XOFlowers –∫–∞–∂–¥—ã–π —Ü–≤–µ—Ç–æ–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å—Ç—Ä–æ–≥–∏–π –æ—Ç–±–æ—Ä, —Å—Ç–µ–±–ª–∏ –æ–±—Ä–µ–∑–∞—é—Ç—Å—è –ø–æ–¥ —É–≥–ª–æ–º 45¬∞, –∞—Ä–∞–Ω–∂–∏—Ä–æ–≤–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –∑–æ–ª–æ—Ç–æ–º—É —Å–µ—á–µ–Ω–∏—é. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã, –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —É—Ç—Ä–æ–º. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è - —è –ø–æ–¥–±–µ—Ä—É –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç!"
        
        elif "1000" in query_lower and "–±—é–¥–∂–µ—Ç" in query_lower:
            return "üå∏ –° –±—é–¥–∂–µ—Ç–æ–º 1000 MDL —É –≤–∞—Å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä! –ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å: '–ò–º–ø–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ —Ä–æ–∑—ã' - 21 –∫—Ä–∞—Å–Ω–∞—è —Ä–æ–∑–∞ –ø—Ä–µ–º–∏—É–º (950 MDL), '–ù–µ–∂–Ω–æ—Å—Ç—å' - –ø–∏–æ–Ω—ã —Å —ç–≤–∫–∞–ª–∏–ø—Ç–æ–º (920 MDL), –∏–ª–∏ –º–∏–∫—Å –±—É–∫–µ—Ç '–†–æ—Å–∫–æ—à—å' (980 MDL). –í—Å–µ —Å –ø–æ–¥–∞—Ä–æ—á–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–æ–π. –ö–∞–∫–æ–π –ø–æ–≤–æ–¥ –ø—Ä–∞–∑–¥–Ω—É–µ–º?"
        
        elif "–ø–æ—Ö–æ—Ä–æ–Ω—ã" in query_lower:
            return "üå∏ –ü—Ä–∏–º–∏—Ç–µ –º–æ–∏ —Å–æ–±–æ–ª–µ–∑–Ω–æ–≤–∞–Ω–∏—è. –í —Ç–∞–∫–∏–µ —Ç—è–∂–µ–ª—ã–µ –º–æ–º–µ–Ω—Ç—ã —Ü–≤–µ—Ç—ã –≤—ã—Ä–∞–∂–∞—é—Ç –Ω–∞—à–µ —É–≤–∞–∂–µ–Ω–∏–µ –∏ –ø–∞–º—è—Ç—å. –ü—Ä–µ–¥–ª–∞–≥–∞—é: –±–µ–ª—ã–µ —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º—ã —Å –ª–µ–Ω—Ç–æ–π (680 MDL), —Ç—Ä–∞—É—Ä–Ω—ã–π –≤–µ–Ω–æ–∫ (1100-1500 MDL), –∏–ª–∏ —Å–∫—Ä–æ–º–Ω—ã–π –±—É–∫–µ—Ç –±–µ–ª—ã—Ö —Ä–æ–∑ (565 MDL). –ú–æ–≥—É –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤."
        
        else:
            return "üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ XOFlowers! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Ü–≤–µ—Ç–∞–º. –ü–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –±—É–∫–µ—Ç –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª—É—á–∞—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç - –ø–æ–≤–æ–¥, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Ü–≤–µ—Ç–∞–º, –±—é–¥–∂–µ—Ç? –£ –Ω–∞—Å –±–æ–ª–µ–µ 200 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç 565 –¥–æ 8700 MDL!"
    
    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
    elif language == "en":
        if "lonely" in query_lower:
            return "üå∏ I understand you're feeling lonely today. Flowers can be wonderful companions and mood lifters! I'd recommend our 'Sunshine Therapy' bouquet with bright yellow flowers (780 MDL), or 'Garden Party' with mixed colorful blooms (850 MDL). They'll brighten your space and spirits. Would you prefer warm or cool colors?"
        
        elif "picky" in query_lower:
            return "üå∏ I appreciate discerning customers! At XOFlowers, we cater to the most refined tastes. Every flower is hand-selected by our master florists, arrangements follow classical proportions, and we guarantee freshness for 7+ days. Tell me your exact preferences and I'll curate perfect options that meet your high standards."
        
        elif "1500" in query_lower and "budget" in query_lower:
            return "üå∏ With a 1500 MDL budget, you have excellent premium options! I recommend: 'Royal Garden' - 25 premium roses with eucalyptus (1450 MDL), 'Luxury Mix' with peonies and roses (1380 MDL), or 'Designer's Choice' seasonal arrangement (1420 MDL). All include luxury packaging. What's the special occasion?"
        
        elif "funeral" in query_lower:
            return "üå∏ My deepest condolences for your loss. Flowers help express our respect and remembrance during difficult times. I suggest: white chrysanthemums arrangement (720 MDL), traditional sympathy wreath (1200-1600 MDL), or simple white roses bouquet (580 MDL). I can arrange same-day delivery if needed."
        
        else:
            return "üå∏ Welcome to XOFlowers! I'm your personal flower consultant, here to help you find the perfect blooms for any occasion. Please tell me about your needs - the occasion, color preferences, budget range? We have over 200 products ranging from 565 to 8700 MDL!"
    
    # –ó–∞–ø–∞—Å–Ω–æ–π –æ—Ç–≤–µ—Ç
    return "üå∏ Hello! I'm here to help you find beautiful flowers. Please tell me more about what you're looking for!"


def analyze_response_quality(query: str, response: str, language: str, scenario_type: str) -> float:
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ü–µ–Ω–∫—É –æ—Ç 0 –¥–æ 10
    """
    score = 0.0
    
    # –ë–∞–∑–æ–≤—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (0-4 –±–∞–ª–ª–∞)
    if response and len(response.strip()) > 20:
        score += 1  # –û—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–π
    
    if "üå∏" in response:
        score += 1  # –ï—Å—Ç—å —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
    
    if len(response) > 100:
        score += 1  # –û—Ç–≤–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π
    
    if any(word in response.lower() for word in ["xoflowers", "flori", "—Ü–≤–µ—Ç", "flower", "–±—É–∫–µ—Ç", "bouquet"]):
        score += 1  # –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —Ç–µ–º–µ —Ü–≤–µ—Ç–æ–≤
    
    # –Ø–∑—ã–∫–æ–≤—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (0-2 –±–∞–ª–ª–∞)
    if language == "ro":
        if any(word in response.lower() for word in ["sunt", "pot", "ajut", "recomand", "vƒÉ"]):
            score += 1
        if "MDL" in response and any(word in response for word in ["Spune»õi", "prefera»õi", "ave»õi"]):
            score += 1
    elif language == "ru":
        if any(word in response.lower() for word in ["–º–æ–≥—É", "–ø–æ–º–æ—á—å", "—Ä–µ–∫–æ–º–µ–Ω–¥—É—é", "–ø—Ä–µ–¥–ª–∞–≥–∞—é"]):
            score += 1
        if "MDL" in response and any(word in response for word in ["–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ", "–ö–∞–∫–æ–π", "–ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ"]):
            score += 1
    elif language == "en":
        if any(word in response.lower() for word in ["can", "help", "recommend", "suggest", "would"]):
            score += 1
        if "MDL" in response and any(word in response for word in ["Tell me", "What", "Would you"]):
            score += 1
    
    # –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ —Ç–∏–ø—É —Å—Ü–µ–Ω–∞—Ä–∏—è (0-3 –±–∞–ª–ª–∞)
    if "budget" in scenario_type or "price" in scenario_type:
        if "MDL" in response and any(price_word in response.lower() for price_word in ["buget", "–±—é–¥–∂–µ—Ç", "budget"]):
            score += 1.5
    
    if "romantic" in scenario_type or "anniversary" in scenario_type or "valentine" in scenario_type:
        if any(word in response.lower() for word in ["romantic", "dragost", "–ª—é–±–æ–≤", "special", "frumos"]):
            score += 1.5
    
    if "urgent" in scenario_type or "emergency" in scenario_type:
        if any(word in response.lower() for word in ["rapid", "imediat", "—Å—Ä–æ—á–Ω–æ", "–±—ã—Å—Ç—Ä–æ", "urgent", "today"]):
            score += 1.5
    
    if "funeral" in scenario_type:
        if any(word in response.lower() for word in ["condolean»õe", "√Æmi pare rƒÉu", "—Å–æ–±–æ–ª–µ–∑–Ω–æ–≤–∞–Ω–∏—è", "sorry for", "sympathy"]):
            score += 1.5
    
    if "sad" in scenario_type or "mood" in scenario_type:
        if any(word in response.lower() for word in ["√Æn»õeleg", "–ø–æ–Ω–∏–º–∞—é", "understand", "moralul", "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "mood"]):
            score += 1.5
    
    # –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (0-1 –±–∞–ª–ª)
    if "?" in response:  # –ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã
        score += 0.5
    
    if any(word in response.lower() for word in ["personalizat", "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π", "personal", "exact", "—Ç–æ—á–Ω–æ", "exactly"]):
        score += 0.5  # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
    
    return min(score, 10.0)  # –ú–∞–∫—Å–∏–º—É–º 10 –±–∞–ª–ª–æ–≤


if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ AI –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞...")
    print("–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≥–æ, –∫–∞–∫–∏–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç")
    print()
    simple_test_consultant()
