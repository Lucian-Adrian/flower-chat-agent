version: '3.8'

services:
  # XOFlowers AI Agent
  xoflowers-ai:
    build: .
    container_name: xoflowers-ai
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # Container-specific overrides
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMADB_PATH=/app/chroma_db_flowers
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./logs:/app/logs
      - ./chroma_db_flowers:/app/chroma_db_flowers
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - xoflowers-network
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for conversation context
  redis:
    image: redis:7-alpine
    container_name: xoflowers-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - xoflowers-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: xoflowers-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - xoflowers-ai
    restart: unless-stopped
    networks:
      - xoflowers-network

volumes:
  redis_data:
    driver: local

networks:
  xoflowers-network:
    driver: bridge